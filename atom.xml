<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TravelChu&#39;s Blog</title>
  <subtitle>记录技术点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://travelchu.com/"/>
  <updated>2017-03-14T09:45:01.000Z</updated>
  <id>http://travelchu.com/</id>
  
  <author>
    <name>TravelChu</name>
    <email>chuchuanming@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>防止UIButton快速多次点击导致事件多次触发</title>
    <link href="http://travelchu.com/2017/03/14/%E9%98%B2%E6%AD%A2UIButton%E5%BF%AB%E9%80%9F%E5%A4%9A%E6%AC%A1%E7%82%B9%E5%87%BB%E5%AF%BC%E8%87%B4%E4%BA%8B%E4%BB%B6%E5%A4%9A%E6%AC%A1%E8%A7%A6%E5%8F%91/"/>
    <id>http://travelchu.com/2017/03/14/防止UIButton快速多次点击导致事件多次触发/</id>
    <published>2017-03-14T09:39:26.000Z</published>
    <updated>2017-03-14T09:45:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>项目中遇到了一个Button快速多次点击导致UIControlEventTouchUpInside多次连续触发的问题，这里记录一下解决方案，代码很简单，一个UIButton的分类，当然也可以做UIControl的分类。<br>UIButton+RepeatTapHandle.h</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">UIButton</span> (<span class="title">RepeatTapHandle</span>)</span></div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><p>UIButton+RepeatTapHandle.m</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"UIButton+RepeatTapHandle.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">UIButton</span> (<span class="title">RepeatTapHandle</span>)</span></div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)sendAction:(SEL)action to:(<span class="keyword">nullable</span> <span class="keyword">id</span>)target forEvent:(<span class="keyword">nullable</span> <span class="built_in">UIEvent</span> *)event &#123;</div><div class="line">  [<span class="keyword">super</span> sendAction:action to:target forEvent:event];</div><div class="line">  [[<span class="built_in">UIApplication</span> sharedApplication] beginIgnoringInteractionEvents];</div><div class="line">  dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(<span class="number">0.2</span> * <span class="built_in">NSEC_PER_SEC</span>)), dispatch_get_main_queue(), ^&#123;</div><div class="line">    [[<span class="built_in">UIApplication</span> sharedApplication] endIgnoringInteractionEvents];</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;项目中遇到了一个Button快速多次点击导致UIControlEventTouchUpInside多次连续触发的问题，这里记录一下解决方案，代码很简单，一个UIButton的分类，当然也可以做UIControl的分类。&lt;br&gt;UIButton+RepeatTapHandle.h&lt;/p&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;UIKit/UIKit.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIButton&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;RepeatTapHandle&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;UIButton+RepeatTapHandle.m&lt;/p&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#import &lt;span class=&quot;meta-string&quot;&gt;&quot;UIButton+RepeatTapHandle.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UIButton&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;RepeatTapHandle&lt;/span&gt;)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)sendAction:(SEL)action to:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;id&lt;/span&gt;)target forEvent:(&lt;span class=&quot;keyword&quot;&gt;nullable&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;UIEvent&lt;/span&gt; *)event &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [&lt;span class=&quot;keyword&quot;&gt;super&lt;/span&gt; sendAction:action to:target forEvent:event];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  [[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] beginIgnoringInteractionEvents];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(&lt;span class=&quot;number&quot;&gt;0.2&lt;/span&gt; * &lt;span class=&quot;built_in&quot;&gt;NSEC_PER_SEC&lt;/span&gt;)), dispatch_get_main_queue(), ^&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    [[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication] endIgnoringInteractionEvents];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
      <category term="UIButton" scheme="http://travelchu.com/tags/UIButton/"/>
    
      <category term="多次点击" scheme="http://travelchu.com/tags/%E5%A4%9A%E6%AC%A1%E7%82%B9%E5%87%BB/"/>
    
  </entry>
  
  <entry>
    <title>理解JSBridge</title>
    <link href="http://travelchu.com/2016/03/14/%E7%90%86%E8%A7%A3JSBridge/"/>
    <id>http://travelchu.com/2016/03/14/理解JSBridge/</id>
    <published>2016-03-14T08:00:26.000Z</published>
    <updated>2016-05-13T06:49:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>随着HTML5的不断普及及优化，其在移动端开发的应用也越来越多，在开发者我们经常需要web和native进行交互，也就是要用到经常听到的“JSBridge”。这里我就自己的理解及实践，讲一下什么是JSBridge。</p><p>有些朋友听到JSBridge，会觉得是个蛮高大上的东西，好像很厉害很复杂的样子，有了它web和native都能交互了呢。其实并非如此，相信我，JSBridge真的是一个非常非常简单的东西。<br><a id="more"></a></p><h2 id="1-为什么需要JSBridge？"><a href="#1-为什么需要JSBridge？" class="headerlink" title="1. 为什么需要JSBridge？"></a>1. 为什么需要JSBridge？</h2><p>这个也许是废话，但我相信有些朋友虽然在用JSBridge，但连这一点都没搞明白。顾名思义，JSBridge是一座用JavaScript搭建起来的桥，一端是web，一端是native。我们搭建这座桥的目的也很简单，让native可以调用web的js代码，让web可以 <strong>“调用”</strong> 原生的代码。请注意这个我加了 引号的调用，它并不是直接调用，而是可以根据web和native约定好的规则来通知native要做什么，native可以更具这个来执行相应的代码。当然，让web可以随心所欲调用native代码也不是不可能，但我想没人愿意那么干，一来实现起来稍微麻烦些，二来也有很大的安全隐患。</p><h2 id="2-为什么是-“JS”-Bridge"><a href="#2-为什么是-“JS”-Bridge" class="headerlink" title="2. 为什么是 “JS” Bridge"></a>2. 为什么是 “JS” Bridge</h2><p>这个比较容易理解，web端支持JavaScript，native有webview，webview可以在所加载的页面加载完成后调用页面的JavaScript代码。所以，使用JavaScript就理所当然了。</p><h2 id="3-native调用web原理"><a href="#3-native调用web原理" class="headerlink" title="3. native调用web原理"></a>3. native调用web原理</h2><p>首先，native需要一个webview，这个webview有个方法叫<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (<span class="keyword">nullable</span> <span class="built_in">NSString</span> *)stringByEvaluatingJavaScriptFromString:(<span class="built_in">NSString</span> *)script;</div></pre></td></tr></table></figure></p><p>通过这个方法，我们可以执行一段JavaScript代码，并取得返回值。</p><h2 id="4-web调用native原理"><a href="#4-web调用native原理" class="headerlink" title="4. web调用native原理"></a>4. web调用native原理</h2><p>native的webview有个代理方法：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">BOOL</span>)webView:(<span class="built_in">UIWebView</span> *)webView shouldStartLoadWithRequest:(<span class="built_in">NSURLRequest</span> *)request navigationType:(<span class="built_in">UIWebViewNavigationType</span>)navigationType;</div></pre></td></tr></table></figure></p><p>在这个方法里可以拦截页面的请求，我们就在这里做文章。当web端加载一个链接，我们就在这个方法里面进行拦截，检查是否符合我们约定的规则，符合的话就拒绝加载并按这个链接携带的信息来执行相应的代码，不符合约定的规则就正常加载链接。<br>一般来说正常的请求都是http协议或者https协议，所以我们通常定义一个其他的协议以方便区分，比如“jsb”。我们来约定一个规则：需要native做的事情，就用“action”作为参数名，各action对应的其他参数分别约定。我们举两个例子。</p><h3 id="例子1"><a href="#例子1" class="headerlink" title="例子1"></a>例子1</h3><p>我们约定一个名为back的action，无参数。web端需要加载的链接则为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jsb://action=back</div></pre></td></tr></table></figure></p><p>当native拦截到请求并发现是jsb协议，知道这是web发来任务了，解析后发现是一个back行为，于是执行了一段返回的代码。</p><h3 id="例子2"><a href="#例子2" class="headerlink" title="例子2"></a>例子2</h3><p>我们约定一个名为shopdetail的action，用来跳转到商铺详情页面，需要带一个名字是id的参数，id为商铺id。web端需要加载的链接则为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">jsb://action=shopdetail&amp;id=1000000</div></pre></td></tr></table></figure></p><p>当native拦截到请求并发现是jsb协议，知道这是web发来任务了，解析后发现是一个shopdetail行为，一是执行了显示商铺详情的代码，并根据商铺id1000000去获取商铺详情。</p><h2 id="5-高级封装"><a href="#5-高级封装" class="headerlink" title="5. 高级封装"></a>5. 高级封装</h2><p>上面的例子只是对JSBridge的简单用法，我们也可以进行一些高级的封装，以实现更合理的对话机制。比如我们在web调用native时，约定一个callback参数，用于native通知web代码执行结果；对参数直接约定为json字符串，以方便解析；对链接进行加密，以防止可能出现的攻击及增加安全性等。</p><h2 id="6-web调用native的最佳实践"><a href="#6-web调用native的最佳实践" class="headerlink" title="6. web调用native的最佳实践"></a>6. web调用native的最佳实践</h2><p>在实践中我们发现，在iOS9之前，如果连续的从web的js调用native，一些调用会被忽略掉（如采用window.location.href的方式）。最可靠的方法是使用iframe，创建一个iframe，指定其链接，增加到当前页面后马上将其删除，示例代码如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">execute</span>(<span class="params">url</span>) </span>&#123;</div><div class="line">  <span class="keyword">var</span> iframe = <span class="built_in">document</span>.createElement(<span class="string">"IFRAME"</span>);</div><div class="line">  iframe.setAttribute(<span class="string">"src"</span>, url);</div><div class="line">  <span class="built_in">document</span>.documentElement.appendChild(iframe);</div><div class="line">  iframe.parentNode.removeChild(iframe);</div><div class="line">  iframe = <span class="literal">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;随着HTML5的不断普及及优化，其在移动端开发的应用也越来越多，在开发者我们经常需要web和native进行交互，也就是要用到经常听到的“JSBridge”。这里我就自己的理解及实践，讲一下什么是JSBridge。&lt;/p&gt;&lt;p&gt;有些朋友听到JSBridge，会觉得是个蛮高大上的东西，好像很厉害很复杂的样子，有了它web和native都能交互了呢。其实并非如此，相信我，JSBridge真的是一个非常非常简单的东西。&lt;br&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
      <category term="JSBridge" scheme="http://travelchu.com/tags/JSBridge/"/>
    
      <category term="web" scheme="http://travelchu.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>修复Kindle‘要求WiFi登录’的问题 Fix Kindle WiFi Login Issue</title>
    <link href="http://travelchu.com/2016/01/21/fixKindleWifiIssue/"/>
    <id>http://travelchu.com/2016/01/21/fixKindleWifiIssue/</id>
    <published>2016-01-21T01:08:48.000Z</published>
    <updated>2016-01-21T02:29:38.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近遇到了Kindle连接WiFi总是提示</p><blockquote><p>“您正在连接的WiFi网络要求您在访问互联网之前先登录。您是否希望跳转至网页浏览器进行登录：xxxxx？”</p></blockquote><a id="more"></a><p><img src="http://7xpujh.com1.z0.glb.clouddn.com/FsYojJEZNrL3s6xWF6toD280fGtY" alt="kindleWifi"></p><p>点击取消则断开WiFi，点确定跳转到网页可以上网，但回到主页进行同步又跳出这个提示，无限循环了。</p><p>一番Google和尝试，最终找到的有效方案是：</p><ol><li>新建一个名为“WIFI_NO_NET_PROBE”的文件，没有后缀名，不需要填内容。</li><li>Kindle以磁盘方式连接电脑。</li><li>拷贝这个文件到Kindle磁盘的根目录。</li><li>弹出磁盘，重新连接WiFi即可。</li></ol><p>希望能帮到有类似问题的朋友。</p><p>点击取消则断开WiFi，点确定跳转到网页可以上网，但回到主页进行同步又跳出这个提示，无限循环了。</p><p>一番Google和尝试，最终找到的有效方案是：</p><ol><li>新建一个名为“WIFI_NO_NET_PROBE”的文件，没有后缀名，不需要填内容。</li><li>Kindle以磁盘方式连接电脑。</li><li>拷贝这个文件到Kindle磁盘的根目录。</li><li>弹出磁盘，重新连接WiFi即可。</li></ol><p>希望能帮到有类似问题的朋友。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近遇到了Kindle连接WiFi总是提示&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;“您正在连接的WiFi网络要求您在访问互联网之前先登录。您是否希望跳转至网页浏览器进行登录：xxxxx？”&lt;/p&gt;&lt;/blockquote&gt;
    
    </summary>
    
      <category term="小技巧" scheme="http://travelchu.com/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="Kindle" scheme="http://travelchu.com/tags/Kindle/"/>
    
      <category term="WiFi" scheme="http://travelchu.com/tags/WiFi/"/>
    
  </entry>
  
  <entry>
    <title>Create Reuseable View With xib 使用xib创建可复用View</title>
    <link href="http://travelchu.com/2016/01/07/CreateReuseableViewWithxib/"/>
    <id>http://travelchu.com/2016/01/07/CreateReuseableViewWithxib/</id>
    <published>2016-01-07T08:43:26.000Z</published>
    <updated>2016-01-19T03:51:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>StoryBoard和Interface Builder为iOS开发带来了极大的便利，今天就给大家介绍一个使用Interface Builder的技巧：<br>使用xib创建可复用View。</p><p>在项目开发中，我们经常需要创建一些可复用的view，比较简单的话代码写写也是很快，但如果比较复杂的话，使用Interface Builder创建一个xib文件来制作就快捷很多，但是传统的方法生成的view只属于xib的File’s Owner, 没有办法复用。</p><p>举个例子，项目有多个页面需要使用一个控件（UIView）来展示一张公交卡的信息, 界面如下：</p><a id="more"></a><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView.png"><p>可以看到这个界面如果用代码写的话还是要花不少功夫的，而且要支持AutoLayout的话，即使有Masonry，代码的长度也可想而知。而使用xib来创建的话相对会容易很多。用xib创建一个这样的页面，相信大家都会，下面我们来看如何让创建的view既支持通过init方法使用，又支持直接在其他xib或者storyboard文件使用。我们给这个view取个名字，就叫“CardView”吧。<br>(示例代码: <a href="https://github.com/TravelC/XibReuseableViewDemo" target="_blank" rel="external">https://github.com/TravelC/XibReuseableViewDemo</a>)</p><h2 id="1-创建CardView-xib文件，并创建好页面，设置好约束"><a href="#1-创建CardView-xib文件，并创建好页面，设置好约束" class="headerlink" title="1. 创建CardView.xib文件，并创建好页面，设置好约束"></a>1. 创建CardView.xib文件，并创建好页面，设置好约束</h2><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView_xib.png"><h2 id="2-创建UIView的子类CardView，设置CardView-xib的File’s-Owner为CardView"><a href="#2-创建UIView的子类CardView，设置CardView-xib的File’s-Owner为CardView" class="headerlink" title="2. 创建UIView的子类CardView，设置CardView.xib的File’s Owner为CardView"></a>2. 创建UIView的子类CardView，设置CardView.xib的File’s Owner为CardView</h2><p>注意这里的CardView是UIView的子类，并不是UIViewController的子类。</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView_owner.png"><h2 id="3-设置我们的cardView为CardView类的一个IBOutlet，这里取名为view"><a href="#3-设置我们的cardView为CardView类的一个IBOutlet，这里取名为view" class="headerlink" title="3. 设置我们的cardView为CardView类的一个IBOutlet，这里取名为view"></a>3. 设置我们的cardView为CardView类的一个IBOutlet，这里取名为view</h2><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView_outlet.png"><h2 id="4-打开CardView-m，重写初始化方法"><a href="#4-打开CardView-m，重写初始化方法" class="headerlink" title="4. 打开CardView.m，重写初始化方法"></a>4. 打开CardView.m，重写初始化方法</h2><p>这里重写了从代码创建会使用init、initWithFrame方法，以及在xib或者storyboard用到的initWithCoder方法。下面的示例代码封装了一个loadCardViewFromNib方法，用来从xib加载view以及做一些初始化操作(增加了一个灰色的边框并设置圆角)。</p><p>CardView.h</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">&lt;UIKit/UIKit.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CardView</span> : <span class="title">UIView</span></span></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">strong</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIView</span> *view;</div><div class="line"></div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *cardTypeLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *cardNameLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *cardNoLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *cardMoneyLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *numOfOpenedProductLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *awardRecordLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIImageView</span> *certificatedImageView;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UILabel</span> *certificatedLabel;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIButton</span> *certificateButton;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIButton</span> *modifyCardInfoButton;</div><div class="line"><span class="keyword">@property</span> (<span class="keyword">weak</span>, <span class="keyword">nonatomic</span>) <span class="keyword">IBOutlet</span> <span class="built_in">UIView</span> *cardTypeBgView;</div><div class="line"></div><div class="line"><span class="keyword">@end</span></div></pre></td></tr></table></figure><p>CardView.m</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#import <span class="meta-string">"CardView.h"</span></span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">CardView</span> ()</span></div><div class="line"><span class="keyword">@property</span> <span class="built_in">BOOL</span> isCardViewLoadedFromNib;</div><div class="line"><span class="keyword">@end</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">CardView</span></span></div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> // Only override drawRect: if you perform custom drawing.</div><div class="line"> // An empty implementation adversely affects performance during animation.</div><div class="line"> - (void)drawRect:(CGRect)rect &#123;</div><div class="line"> // Drawing code</div><div class="line"> &#125;</div><div class="line"> */</div><div class="line"></div><div class="line">- (<span class="keyword">void</span>)loadCardViewFromNib &#123;</div><div class="line">    <span class="keyword">if</span> (!<span class="keyword">self</span>.isCardViewLoadedFromNib) &#123;</div><div class="line">        [[<span class="built_in">NSBundle</span> mainBundle] loadNibNamed:<span class="string">@"CardView"</span> owner:<span class="keyword">self</span> options:<span class="literal">nil</span>];</div><div class="line">        [<span class="keyword">self</span> addSubview:<span class="keyword">self</span>.view];</div><div class="line">        <span class="keyword">self</span>.view.layer.borderWidth = <span class="number">0.5</span>;</div><div class="line">        <span class="keyword">self</span>.view.layer.borderColor = [<span class="built_in">UIColor</span> lightGrayColor].CGColor;</div><div class="line">        <span class="keyword">self</span>.view.layer.cornerRadius = <span class="number">5.0</span>;</div><div class="line"></div><div class="line">        <span class="keyword">self</span>.isCardViewLoadedFromNib = <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">- (<span class="keyword">instancetype</span>)init &#123;</div><div class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> init];</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">        [<span class="keyword">self</span> loadCardViewFromNib];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithFrame:(<span class="built_in">CGRect</span>)frame &#123;</div><div class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithFrame:frame];</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">        [<span class="keyword">self</span> loadCardViewFromNib];</div><div class="line">        <span class="built_in">CGRect</span> viewFrame = <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, frame.size.width, frame.size.height);</div><div class="line">        <span class="keyword">self</span>.view.frame = viewFrame;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//</span></div><div class="line">- (<span class="keyword">instancetype</span>)initWithCoder:(<span class="built_in">NSCoder</span> *)aDecoder &#123;</div><div class="line">    <span class="keyword">self</span> = [<span class="keyword">super</span> initWithCoder:aDecoder];</div><div class="line">    <span class="keyword">if</span> (<span class="keyword">self</span>) &#123;</div><div class="line">        [<span class="keyword">self</span> loadCardViewFromNib];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">self</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>可以看到，在loadCardViewFromNib里面，我们事实上从CardView.xib初始化了一个view（IBOutlet那个），并把它当做subView加到了CardView的实例上面。同时，在CardView.h里面我们设置了一系列的IBOutlet，以方便CardView的后续使用。</p><h2 id="5-在代码中使用CardView"><a href="#5-在代码中使用CardView" class="headerlink" title="5. 在代码中使用CardView"></a>5. 在代码中使用CardView</h2><p>在代码中使用CardView，相当方便，像你使用UIView一样来使用即可，这里给出一个通过initWithFrame方法创建的例子：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">CardView *cardView = [[CardView alloc] initWithFrame:<span class="built_in">CGRectMake</span>(<span class="number">10.0</span>, <span class="number">70.0</span>, <span class="number">300.0</span>, <span class="number">186.0</span>)];</div><div class="line">[<span class="keyword">self</span>.view addSubview:cardView];</div></pre></td></tr></table></figure><h2 id="6-在xib或者storyboard中使用CardView"><a href="#6-在xib或者storyboard中使用CardView" class="headerlink" title="6. 在xib或者storyboard中使用CardView"></a>6. 在xib或者storyboard中使用CardView</h2><p>拖拽一个UIView，将它的类改成CardView即可，唯一的缺点就是不能在xib或者storyboard中预览CardView，现实的实际是空白的UIView，但在程序运行时是CardView真实的样子。</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView_storyboard.png"><h2 id="7-示例项目代码及截图"><a href="#7-示例项目代码及截图" class="headerlink" title="7. 示例项目代码及截图"></a>7. 示例项目代码及截图</h2><p>代码请到Github下载: <a href="https://github.com/TravelC/XibReuseableViewDemo" target="_blank" rel="external">https://github.com/TravelC/XibReuseableViewDemo</a></p><p>截图：</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/20160107/cardView.gif">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;StoryBoard和Interface Builder为iOS开发带来了极大的便利，今天就给大家介绍一个使用Interface Builder的技巧：&lt;br&gt;使用xib创建可复用View。&lt;/p&gt;&lt;p&gt;在项目开发中，我们经常需要创建一些可复用的view，比较简单的话代码写写也是很快，但如果比较复杂的话，使用Interface Builder创建一个xib文件来制作就快捷很多，但是传统的方法生成的view只属于xib的File’s Owner, 没有办法复用。&lt;/p&gt;&lt;p&gt;举个例子，项目有多个页面需要使用一个控件（UIView）来展示一张公交卡的信息, 界面如下：&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="Reuseable View" scheme="http://travelchu.com/tags/Reuseable-View/"/>
    
      <category term="xib" scheme="http://travelchu.com/tags/xib/"/>
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>TCRoundedCorner（border optional） 指定view的某个角为圆角并设置边框</title>
    <link href="http://travelchu.com/2015/12/22/tcroundedcorner/"/>
    <id>http://travelchu.com/2015/12/22/tcroundedcorner/</id>
    <published>2015-12-22T09:05:00.000Z</published>
    <updated>2016-01-07T03:19:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="TCRoundedCorner"><a href="#TCRoundedCorner" class="headerlink" title="TCRoundedCorner"></a>TCRoundedCorner</h1><p>This is a category of UIView which provided the ability of add specified corner(s) to a view with a optional border.</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/demoOfTCRoundedCorner.gif"><a id="more"></a><h1 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h1><h4 id="Cocoapod-Method"><a href="#Cocoapod-Method" class="headerlink" title="Cocoapod Method:-"></a>Cocoapod Method:-</h4><p><code>pod &#39;TCRoundedCorner&#39;, &#39;~&gt; 1.0.0&#39;</code></p><h4 id="Source-Code-Method"><a href="#Source-Code-Method" class="headerlink" title="Source Code Method:-"></a>Source Code Method:-</h4><p>Add files in folder TCRoundedCorner to your project.</p><h2 id="How-To-Get-Started"><a href="#How-To-Get-Started" class="headerlink" title="How To Get Started"></a>How To Get Started</h2><p>1.Only round myView’s corners:</p><p><code>[self.myView roundedCorner:type radius:20.0];</code></p><p>2.Round corners and add a border together:</p><p><code>[self.myView roundedCorner:type radius:20.0 borderColor:borderColor borderWidth:5.0];</code></p><p>3.Add border only:</p><p><code>[self.myView addBorderWithColor:borderColor borderWidth:5.0];</code><br>4.Remove border:</p><p><code>[self removeBorder];</code></p><h2 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h2><p>Distributed under the MIT License.</p><h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>If you wish to contact me, email at: chuchuanming@gmail.com</p><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p><a href="http://travelchu.com">http://travelchu.com</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;TCRoundedCorner&quot;&gt;&lt;a href=&quot;#TCRoundedCorner&quot; class=&quot;headerlink&quot; title=&quot;TCRoundedCorner&quot;&gt;&lt;/a&gt;TCRoundedCorner&lt;/h1&gt;&lt;p&gt;This is a category of UIView which provided the ability of add specified corner(s) to a view with a optional border.&lt;/p&gt;&lt;img src=&quot;http://7xpujh.com1.z0.glb.clouddn.com/static/images/demoOfTCRoundedCorner.gif&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Mac插入耳机没声音的解决方案(Solution for No Sound When Plug in Your Headphones to Mac)</title>
    <link href="http://travelchu.com/2015/12/16/Mac%E6%8F%92%E5%85%A5%E8%80%B3%E6%9C%BA%E6%B2%A1%E5%A3%B0%E9%9F%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88(Solution%20for%20No%20Sound%20When%20Plug%20in%20Your%20Headphones%20to%20Mac)/"/>
    <id>http://travelchu.com/2015/12/16/Mac插入耳机没声音的解决方案(Solution for No Sound When Plug in Your Headphones to Mac)/</id>
    <published>2015-12-16T02:47:57.000Z</published>
    <updated>2016-01-07T05:12:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近遇到了两次电脑（RMBP）插入耳机后耳机无声的问题，第一次重启解决，第二次不想重启，在做了一番搜索尝试后，最终的有效方案是重新加载下驱动。在终端执行如下命令即可:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo kextunload /System/Library/Extensions/AppleHDA.kext</div><div class="line">sudo kextload /System/Library/Extensions/AppleHDA.kext</div></pre></td></tr></table></figure><p>希望可以帮到有类似烦恼的人。</p><h2 id="Solution-for-No-Sound-When-Plug-in-Your-Headphones-to-Mac"><a href="#Solution-for-No-Sound-When-Plug-in-Your-Headphones-to-Mac" class="headerlink" title="Solution for No Sound When Plug in Your Headphones to Mac"></a>Solution for No Sound When Plug in Your Headphones to Mac</h2><p>Recently met twice headphones silent problem when plug in my Headphones to my RMBP. I solved the first one with a reboot, but I don’t want to reboot the second time. I did some google, the final effective solution is to reload the drive. Run the following command in terminal fix my issue:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sudo kextunload /System/Library/Extensions/AppleHDA.kext</div><div class="line">sudo kextload /System/Library/Extensions/AppleHDA.kext</div></pre></td></tr></table></figure><p>Hope this can help you.</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近遇到了两次电脑（RMBP）插入耳机后耳机无声的问题，第一次重启解决，第二次不想重启，在做了一番搜索尝试后，最终的有效方案是重新加载下驱动。在终端执行如下命令即可:&lt;/p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>How to Create and Test Your Own Cocoapods Project</title>
    <link href="http://travelchu.com/2015/11/27/how-to-create-and-test-your-own-cocoapods-project/"/>
    <id>http://travelchu.com/2015/11/27/how-to-create-and-test-your-own-cocoapods-project/</id>
    <published>2015-11-27T13:48:07.000Z</published>
    <updated>2016-01-07T03:20:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Recently I have open-sourced my project<a href="https://github.com/TravelC/TCTitleLoading" target="_blank" rel="external">TCTitleLoading</a> and made it supporting Cocoapods. Below is the procedure.</p><h3 id="1-Create-Your-Project-and-Submit-It-to-Github"><a href="#1-Create-Your-Project-and-Submit-It-to-Github" class="headerlink" title="1. Create Your Project and Submit It to Github"></a>1. Create Your Project and Submit It to Github</h3><p>Create your project and submit it to Github，Record the address for later useage, for example：<a href="https://github.com/TravelC/TCTitleLoading.git" target="_blank" rel="external">https://github.com/TravelC/TCTitleLoading.git</a></p><h3 id="2-Create-a-Branch-for-Cocoapods"><a href="#2-Create-a-Branch-for-Cocoapods" class="headerlink" title="2. Create a Branch for Cocoapods"></a>2. Create a Branch for Cocoapods</h3><p>Create a branch for Cocoapods. Naming it with version number is recommended, e.g.‘0.0.1’</p><a id="more"></a><h3 id="3-Create-podspec-File-and-Edit"><a href="#3-Create-podspec-File-and-Edit" class="headerlink" title="3. Create podspec File and Edit"></a>3. Create podspec File and Edit</h3><p>Open Terminal, cd to your project directory, type command ‘pod spec create’to create a podspec file：</p><p><code>pod spec create test</code></p><p>‘test’ is the name of podspec file, you can change to any other name you like.</p><p>Once the file is created, you can edit it with your favourite text editor. There are detailed comments in the podspec file; just go through it and change it to what you need. Please take note that the final file should not contain any comment, so delete all the comments.</p><h3 id="4-Verify-podspec-File"><a href="#4-Verify-podspec-File" class="headerlink" title="4. Verify podspec File"></a>4. Verify podspec File</h3><p>Open Terminal, cd to the directory of your podspec file, type command ‘pod spec lint ’ to verify it：</p><p><code>pod spec lint test.podspec</code></p><p>If the verification passes, the Terminal will print:</p><p><code>xxx passed validation.</code></p><p>If there’s any issue, it will also print; just fix them and verify again. If you want to ignore the warnings，you can add –allow-warnings paramater to the command，for example：</p><p><code>pod spec lint test.podspec --allow-warnings</code></p><h3 id="5-Testing"><a href="#5-Testing" class="headerlink" title="5. Testing"></a>5. Testing</h3><p>When the verification is passed, you can test your Cocoapods project locally. Create a new project, create the pod file as usual, and add the pod with format like below:</p><p><code>pod &quot;TCTitleLoading&quot;, :path =&gt; &#39;../../TCTitleLoading&#39;</code></p><p>what followed ‘path =&gt;’ is the path of your Cocoapods project。</p><p>run conmmand ‘pod install’ in Terminal and continue your testing。</p><h3 id="6-Submit-the-Project-to-Cocoapods-Trunk-So-That-Others-Can-Use-your-Library"><a href="#6-Submit-the-Project-to-Cocoapods-Trunk-So-That-Others-Can-Use-your-Library" class="headerlink" title="6. Submit the Project to Cocoapods Trunk, So That Others Can Use your Library"></a>6. Submit the Project to Cocoapods Trunk, So That Others Can Use your Library</h3><p>If you have finished your tesing, you can now submit the project to Cocoapods trunk. If you haven’t registed yet, you need to regist first. In Terminal, run command：</p><p><code>pod trunk register email &#39;name&#39; --description=&#39;some description&#39;</code></p><p>Since there’s no password for the registeration which is related to you computer, I recommend that you write something about your computer for the description part, for example：‘Persional MacBook Pro’.</p><p>After registeration type ‘pod lib lint’ and hit enter:</p><p><code>pod lib lint</code></p><p>This will do the verification again，you can add –allow-warnings at the end to skip warnings：</p><p><code>pod lib lint --allow-warnings</code></p><p>After passed the verification, type and excute</p><p><code>pod trunk push TCTitleLoading.podspec --allow-warnings</code><br>the –allow-warnings paramater is optional.</p><p>If everything is OK, now your library is public in Cocoapods trunk. Give Cocoapods some time to index, do a ‘pod search’, Bingo!</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Recently I have open-sourced my project&lt;a href=&quot;https://github.com/TravelC/TCTitleLoading&quot;&gt;TCTitleLoading&lt;/a&gt; and made it supporting Cocoapods. Below is the procedure.&lt;/p&gt;&lt;h3 id=&quot;1-Create-Your-Project-and-Submit-It-to-Github&quot;&gt;&lt;a href=&quot;#1-Create-Your-Project-and-Submit-It-to-Github&quot; class=&quot;headerlink&quot; title=&quot;1. Create Your Project and Submit It to Github&quot;&gt;&lt;/a&gt;1. Create Your Project and Submit It to Github&lt;/h3&gt;&lt;p&gt;Create your project and submit it to Github，Record the address for later useage, for example：&lt;a href=&quot;https://github.com/TravelC/TCTitleLoading.git&quot;&gt;https://github.com/TravelC/TCTitleLoading.git&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;2-Create-a-Branch-for-Cocoapods&quot;&gt;&lt;a href=&quot;#2-Create-a-Branch-for-Cocoapods&quot; class=&quot;headerlink&quot; title=&quot;2. Create a Branch for Cocoapods&quot;&gt;&lt;/a&gt;2. Create a Branch for Cocoapods&lt;/h3&gt;&lt;p&gt;Create a branch for Cocoapods. Naming it with version number is recommended, e.g.‘0.0.1’&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>如何创建自己的Cocoapods项目并测试</title>
    <link href="http://travelchu.com/2015/11/24/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84Cocoapods%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%B5%8B%E8%AF%95/"/>
    <id>http://travelchu.com/2015/11/24/如何创建自己的Cocoapods项目并测试/</id>
    <published>2015-11-24T06:38:40.000Z</published>
    <updated>2016-01-07T03:21:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近做了一个支持Cocoapods的开源项目<a href="https://github.com/TravelC/TCTitleLoading" target="_blank" rel="external">TCTitleLoading</a>,总结了一下相关步骤。</p><h3 id="1-创建项目并提交到Github"><a href="#1-创建项目并提交到Github" class="headerlink" title="1. 创建项目并提交到Github"></a>1. 创建项目并提交到Github</h3><p>创建你的项目并提交到github，记下代码地址备用，如：<a href="https://github.com/TravelC/TCTitleLoading.git" target="_blank" rel="external">https://github.com/TravelC/TCTitleLoading.git</a></p><h3 id="2-创建Cocoapods使用的分支"><a href="#2-创建Cocoapods使用的分支" class="headerlink" title="2. 创建Cocoapods使用的分支"></a>2. 创建Cocoapods使用的分支</h3><p>创建一个供Cocoapods使用的分支，建议以版本号命名，如‘0.0.1’</p><a id="more"></a><h3 id="3-创建podspec文件并编辑"><a href="#3-创建podspec文件并编辑" class="headerlink" title="3. 创建podspec文件并编辑"></a>3. 创建podspec文件并编辑</h3><p>打开终端，cd到项目目录，用‘pod spec create’命令创建podspec文件：<br><code>pod spec create test</code></p><p>其中test是podspec文件的名称，可以按自己需要修改。</p><p>文件创建之后就可以用自己喜欢的文本编辑器进行编辑了，里面有详细的注释，按需要填写即可。需要注意的是最终的文件是不能包含注释的，所以要把所有的注释都删掉。</p><h3 id="4-验证podspec文件"><a href="#4-验证podspec文件" class="headerlink" title="4. 验证podspec文件"></a>4. 验证podspec文件</h3><p>打开终端，cd到podspec文件所在的目录，执行 ‘pod spec lint ’命令进行验证：</p><p>`<br>pod spec lint test.podspec</p><p>`<br>通过之后会显示</p><p><code>xxx passed validation.</code></p><p>字样，如果有问题，会打印相应问题，修正后再次验证即可。如果想忽略警告，可增加–allow-warnings参数，如：</p><p><code>pod spec lint test.podspec --allow-warnings</code></p><h3 id="5-测试"><a href="#5-测试" class="headerlink" title="5. 测试"></a>5. 测试</h3><p>验证通过之后就可以在本地对项目进行测试了，新建一个测试项目，创建并初始化Podfile. Podfile内对要测试的pod填写格式如下：</p><p><code>pod &quot;TCTitleLoading&quot;, :path =&gt; &#39;../../TCTitleLoading&#39;</code></p><p>其中path =&gt;跟着的是podspec文件指定的代码所在的目录。</p><p>终端执行 ‘pod install’并做相关测试。</p><h3 id="6-提交给Cocoapods公共库（Trunk）以便别人使用"><a href="#6-提交给Cocoapods公共库（Trunk）以便别人使用" class="headerlink" title="6. 提交给Cocoapods公共库（Trunk）以便别人使用"></a>6. 提交给Cocoapods公共库（Trunk）以便别人使用</h3><p>测试通过后就可以提交到Cocoapods公共库（Trunk）以便别人使用啦。如果你还没有注册过，首先要执行注册命令：</p><p><code>pod trunk register 邮箱 &#39;名字&#39; --description=&#39;描述&#39;</code></p><p>关于描述，由于注册不需要密码，是和电脑相关的，建议填写自己的电脑信息，如：‘Persional MacBook Pro’</p><p>注册之后先执行</p><p><code>pod lib lint</code></p><p>验证，当然也可以增加–allow-warnings参数以忽略警告：</p><p><code>pod lib lint --allow-warnings</code></p><p>验证通过后执行</p><p><code>pod trunk push TCTitleLoading.podspec --allow-warnings</code></p><p>当然–allow-warnings参数是可选的。</p><p>一切正常的的话你的项目就发布到Cocoapods啦。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近做了一个支持Cocoapods的开源项目&lt;a href=&quot;https://github.com/TravelC/TCTitleLoading&quot;&gt;TCTitleLoading&lt;/a&gt;,总结了一下相关步骤。&lt;/p&gt;&lt;h3 id=&quot;1-创建项目并提交到Github&quot;&gt;&lt;a href=&quot;#1-创建项目并提交到Github&quot; class=&quot;headerlink&quot; title=&quot;1. 创建项目并提交到Github&quot;&gt;&lt;/a&gt;1. 创建项目并提交到Github&lt;/h3&gt;&lt;p&gt;创建你的项目并提交到github，记下代码地址备用，如：&lt;a href=&quot;https://github.com/TravelC/TCTitleLoading.git&quot;&gt;https://github.com/TravelC/TCTitleLoading.git&lt;/a&gt;&lt;/p&gt;&lt;h3 id=&quot;2-创建Cocoapods使用的分支&quot;&gt;&lt;a href=&quot;#2-创建Cocoapods使用的分支&quot; class=&quot;headerlink&quot; title=&quot;2. 创建Cocoapods使用的分支&quot;&gt;&lt;/a&gt;2. 创建Cocoapods使用的分支&lt;/h3&gt;&lt;p&gt;创建一个供Cocoapods使用的分支，建议以版本号命名，如‘0.0.1’&lt;/p&gt;
    
    </summary>
    
      <category term="AppStore(iOS)" scheme="http://travelchu.com/categories/AppStore-iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>TCTitleLoading导航标题下的loading视图</title>
    <link href="http://travelchu.com/2015/11/23/tctitleloading/"/>
    <id>http://travelchu.com/2015/11/23/tctitleloading/</id>
    <published>2015-11-23T09:05:48.000Z</published>
    <updated>2016-01-07T03:21:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>开源了自己写的一个在导航栏标题下方的Loading，可自定义颜色及设置哪些页面不需要Loading。代码请见<a href="https://github.com/TravelC/TCTitleLoading" target="_blank" rel="external">TCTitleLoading</a></p><h2 id="TCTitleLoading"><a href="#TCTitleLoading" class="headerlink" title="TCTitleLoading"></a>TCTitleLoading</h2><p>This is a loading in the bottom of navigation bar title area.<br>This project is inspired by <a href="https://github.com/JackTeam/XHLoadingNavigationItemTitleView" target="_blank" rel="external">XHLoadingNavigationItemTitleView</a></p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/tctitleloading.png"><a id="more"></a><p>##How To Get Started</p><ol><li>In your Appdelegate.m, import TCTitleLoadingManager and set custom color, you can skip this step if you want to use the default black color:</li></ol><p>`</p><ul><li><p>(BOOL)application:(UIApplication <em>)application didFinishLaunchingWithOptions:(NSDictionary</em>)launchOptions {<br>// Override point for customization after application launch.</p><p>//Set custom color for dots<br>[TCTitleLoadingManager setDotColor:[UIColor orangeColor]];<br>return YES;<br>}<br>`</p></li></ul><p>2.Start the loading by calling method startAnimationTitle in your view controller:</p><p><code>[self startAnimationTitle];</code></p><p>3.Start the loading by calling method startAnimationTitle in your view controller:</p><p><code>[self stopAnimationTitle];</code><br>4.If you want to skip the title loading for some pages, just tell the manager:</p><p><code>[TCTitleLoadingManager SkipTitleLoadingForClass:[self class]];</code></p><h2 id="Thanks"><a href="#Thanks" class="headerlink" title="Thanks"></a>Thanks</h2><p>This project is inspired by <a href="https://github.com/JackTeam/XHLoadingNavigationItemTitleView" target="_blank" rel="external">XHLoadingNavigationItemTitleView</a>.<br>The dot loading view is <a href="https://github.com/itouch2/TYDotIndicatorView" target="_blank" rel="external">TYDotIndicatorView</a></p><h2 id="LICENSE"><a href="#LICENSE" class="headerlink" title="LICENSE"></a>LICENSE</h2><p>Distributed under the MIT License.</p><h2 id="Author"><a href="#Author" class="headerlink" title="Author"></a>Author</h2><p>If you wish to contact me, email at: chuchuanming@gmail.com</p><h2 id="Blog"><a href="#Blog" class="headerlink" title="Blog"></a>Blog</h2><p><a href="http://travelchu.com">http://travelchu.com</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开源了自己写的一个在导航栏标题下方的Loading，可自定义颜色及设置哪些页面不需要Loading。代码请见&lt;a href=&quot;https://github.com/TravelC/TCTitleLoading&quot;&gt;TCTitleLoading&lt;/a&gt;&lt;/p&gt;&lt;h2 id=&quot;TCTitleLoading&quot;&gt;&lt;a href=&quot;#TCTitleLoading&quot; class=&quot;headerlink&quot; title=&quot;TCTitleLoading&quot;&gt;&lt;/a&gt;TCTitleLoading&lt;/h2&gt;&lt;p&gt;This is a loading in the bottom of navigation bar title area.&lt;br&gt;This project is inspired by &lt;a href=&quot;https://github.com/JackTeam/XHLoadingNavigationItemTitleView&quot;&gt;XHLoadingNavigationItemTitleView&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://7xpujh.com1.z0.glb.clouddn.com/static/images/tctitleloading.png&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>去除NSString里除数字外的所有字符</title>
    <link href="http://travelchu.com/2015/11/12/%E5%8E%BB%E9%99%A4NSString%E9%87%8C%E9%99%A4%E6%95%B0%E5%AD%97%E5%A4%96%E7%9A%84%E6%89%80%E6%9C%89%E5%AD%97%E7%AC%A6/"/>
    <id>http://travelchu.com/2015/11/12/去除NSString里除数字外的所有字符/</id>
    <published>2015-11-12T08:04:21.000Z</published>
    <updated>2016-01-07T03:27:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说，上代码：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">NSString</span> *test=<span class="string">@"2015/11/12;*1-年2+3年月"</span>; </div><div class="line"><span class="built_in">NSString</span> *newString = [[test componentsSeparatedByCharactersInSet: [[<span class="built_in">NSCharacterSet</span> decimalDigitCharacterSet] invertedSet]] componentsJoinedByString:<span class="string">@""</span>]; </div><div class="line"><span class="built_in">NSLog</span>(<span class="string">@"%@"</span>, newString);</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话不多说，上代码：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div cla
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>一个weakSelf的宏定义及用法A MACRO of weak self</title>
    <link href="http://travelchu.com/2015/01/16/%E4%B8%80%E4%B8%AAweakSelf%E7%9A%84%E5%AE%8F%E5%AE%9A%E4%B9%89%E5%8F%8A%E7%94%A8%E6%B3%95/"/>
    <id>http://travelchu.com/2015/01/16/一个weakSelf的宏定义及用法/</id>
    <published>2015-01-16T03:53:21.000Z</published>
    <updated>2016-01-07T04:51:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>在程序中我们经常用到Block，但写weak self 时会比较繁琐，这里介绍一个宏定义：</p><p>宏定义如下</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#define WS(weakSelf)  weak typeof(&amp;*self)weakSelf = self;</span></div></pre></td></tr></table></figure><p>用法例子：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">WS(weakself)</div><div class="line">    [<span class="keyword">self</span>.tableView addHeaderWithCallback:^&#123;</div><div class="line">        [weakself requestMemberList];</div><div class="line">    &#125;];</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在程序中我们经常用到Block，但写weak self 时会比较繁琐，这里介绍一个宏定义：&lt;/p&gt;&lt;p&gt;宏定义如下&lt;/p&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>实现字符串数组的模糊搜索过滤Fuzzy Search in NSArray of NSString</title>
    <link href="http://travelchu.com/2015/01/15/fuzzy-search-in-nsarray-of-nsstring/"/>
    <id>http://travelchu.com/2015/01/15/fuzzy-search-in-nsarray-of-nsstring/</id>
    <published>2015-01-15T05:10:26.000Z</published>
    <updated>2016-01-07T04:51:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>利用NSPredicate进行模糊搜索</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">模糊搜索,用来筛选数组里符合要求项</div><div class="line">*</div><div class="line">@param searchText 要搜索的字符串</div><div class="line">@param stringArray 有字符串组成的数组</div><div class="line">*</div><div class="line">@return 所有符合项组成的数组</div><div class="line">*/</div><div class="line">-(<span class="built_in">NSArray</span>)fuzzySearchText:(<span class="built_in">NSString</span>)searchText inArray:(<span class="built_in">NSArray</span>)stringArray&#123;</div><div class="line"><span class="built_in">NSStringformat</span>=@”SELF LIKE[cd] ‘“;</div><div class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;searchText.length; i++) &#123;</div><div class="line"><span class="built_in">NSStringstr</span>=[searchText substringWithRange:<span class="built_in">NSMakeRange</span>(i, <span class="number">1</span>)];</div><div class="line">format=[format stringByAppendingString:[<span class="built_in">NSString</span> stringWithFormat:@”%@“,str]];</div><div class="line">&#125;</div><div class="line">format=[format stringByAppendingString:@”‘“];</div><div class="line"><span class="built_in">NSPredicatepredicate</span> = [<span class="built_in">NSPredicate</span> predicateWithFormat:format];</div><div class="line"><span class="keyword">return</span> [stringArray filteredArrayUsingPredicate:predicate];</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;利用NSPredicate进行模糊搜索&lt;/p&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/di
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS获取图片UIImage颜色均值AverageColor</title>
    <link href="http://travelchu.com/2014/08/19/iOS%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87UIImage%E9%A2%9C%E8%89%B2%E5%9D%87%E5%80%BCAverageColor/"/>
    <id>http://travelchu.com/2014/08/19/iOS获取图片UIImage颜色均值AverageColor/</id>
    <published>2014-08-19T05:33:52.000Z</published>
    <updated>2016-01-07T04:52:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://travelchu.com/2014/08/19/iOS%E5%88%A4%E6%96%AD%E9%A2%9C%E8%89%B2UIColor%E6%98%AF%E6%B5%85%E8%89%B2%E8%BF%98%E6%98%AF%E6%B7%B1%E8%89%B2(DarkOrBright">iOS判断颜色UIColor是浅色还是深色(DarkOrBright)</a>)中介绍了对颜色深浅的判断。那么，假如要判断背景图片颜色的深浅又该如何做呢？这里接啥一个获取UIImage颜色均值的方法，结合上一篇博文，便能很好的判断图片深浅：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">- (<span class="built_in">UIColor</span> )averageColorForImage:(<span class="built_in">UIImage</span>)image &#123;</div><div class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> rgba[<span class="number">4</span>];</div><div class="line">    <span class="built_in">CGContextRef</span> context = <span class="built_in">CGBitmapContextCreate</span>(rgba, <span class="number">1</span>, <span class="number">1</span>, <span class="number">8</span>, <span class="number">4</span>, colorSpace, kCGImageAlphaPremultipliedLast | kCGBitmapByteOrder32Big);</div><div class="line"><span class="built_in">CGContextDrawImage</span>(context, <span class="built_in">CGRectMake</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>), image.CGImage);</div><div class="line"><span class="built_in">CGColorSpaceRelease</span>(colorSpace);</div><div class="line"><span class="built_in">CGContextRelease</span>(context);</div><div class="line"></div><div class="line"><span class="keyword">if</span>(rgba[<span class="number">3</span>] &amp;gt; <span class="number">0</span>) &#123;</div><div class="line">    <span class="built_in">CGFloat</span> alpha = ((<span class="built_in">CGFloat</span>)rgba[<span class="number">3</span>])/<span class="number">255.0</span>;</div><div class="line">    <span class="built_in">CGFloat</span> multiplier = alpha/<span class="number">255.0</span>;</div><div class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:((<span class="built_in">CGFloat</span>)rgba[<span class="number">0</span>])*multiplier</div><div class="line">                           green:((<span class="built_in">CGFloat</span>)rgba[<span class="number">1</span>])*multiplier</div><div class="line">                            blue:((<span class="built_in">CGFloat</span>)rgba[<span class="number">2</span>])*multiplier</div><div class="line">                           alpha:alpha];</div><div class="line">&#125;</div><div class="line"><span class="keyword">else</span> &#123;</div><div class="line">    <span class="keyword">return</span> [<span class="built_in">UIColor</span> colorWithRed:((<span class="built_in">CGFloat</span>)rgba[<span class="number">0</span>])/<span class="number">255.0</span></div><div class="line">                           green:((<span class="built_in">CGFloat</span>)rgba[<span class="number">1</span>])/<span class="number">255.0</span></div><div class="line">                            blue:((<span class="built_in">CGFloat</span>)rgba[<span class="number">2</span>])/<span class="number">255.0</span></div><div class="line">                           alpha:((<span class="built_in">CGFloat</span>)rgba[<span class="number">3</span>])/<span class="number">255.0</span>];</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://travelchu.com/2014/08/19/iOS%E5%88%A4%E6%96%AD%E9%A2%9C%E8%89%B2UIColor%E6%98%AF%E6%B5%85%E8%89%B2%E8%BF%98%E6%98%AF%E6%
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS判断颜色UIColor是浅色还是深色(DarkOrBright)</title>
    <link href="http://travelchu.com/2014/08/19/iOS%E5%88%A4%E6%96%AD%E9%A2%9C%E8%89%B2UIColor%E6%98%AF%E6%B5%85%E8%89%B2%E8%BF%98%E6%98%AF%E6%B7%B1%E8%89%B2(DarkOrBright)/"/>
    <id>http://travelchu.com/2014/08/19/iOS判断颜色UIColor是浅色还是深色(DarkOrBright)/</id>
    <published>2014-08-19T05:33:05.000Z</published>
    <updated>2016-01-07T04:52:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>获取颜色的深浅这个需求并不少见，比如根据背景色来动态更改Label的文字颜色以让用户获得更好的阅读体验。</p><p>下面介绍一个简单的判断方法，可能不是最好的，但可以满足大部分需求。</p><p>颜色深很好理解，颜色浅就稍复杂一点，简单归为两种情况：</p><p>1.透明</p><p>2.不透明</p><p>不透明好办，不多做叙述。</p><p>对于透明，我自己在测试中发现可氛围两种情况来处理，一是全透明，二是部分透明。</p><p>我们看一下CGColor的一个方法：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/ Return the color components (including alpha) associated with `color’. /</div><div class="line"><span class="built_in">CG_EXTERN</span> <span class="keyword">const</span> <span class="built_in">CGFloat</span> *<span class="built_in">CGColorGetComponents</span>(<span class="built_in">CGColorRef</span> color)</div></pre></td></tr></table></figure></p><p>这个方法可以取得颜色的分力，我们将用它来做颜色深浅的判断。上面的说明写的很清楚，包括透明度。但实际测试上，这个方法会把全透明判断为深色，所以对全透明我们做一个特别处理。</p><p>获取透明度代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGFloat</span>) alphaForColor:(<span class="built_in">UIColor</span>*)color &#123;</div><div class="line">    <span class="built_in">CGFloat</span> r, g, b, a, w, h, s, l;</div><div class="line">    <span class="built_in">BOOL</span> compatible = [color getWhite:&amp;w alpha:&amp;a];</div><div class="line">    <span class="keyword">if</span> (compatible) &#123;</div><div class="line">        <span class="keyword">return</span> a;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        compatible = [color getRed:&amp;r green:&amp;g blue:&amp;b alpha:&amp;a];</div><div class="line">        <span class="keyword">if</span> (compatible) &#123;</div><div class="line">            <span class="keyword">return</span> a;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            [color getHue:&amp;h saturation:&amp;s brightness:&amp;l alpha:&amp;a];</div><div class="line">            <span class="keyword">return</span> a;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>判断颜色深浅代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">-(<span class="built_in">BOOL</span>)isDarkColor:(<span class="built_in">UIColor</span> )newColor&#123;</div><div class="line">    <span class="keyword">if</span> ([<span class="keyword">self</span> alphaForColor: newColor]&lt;<span class="number">10e-5</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">const</span> <span class="built_in">CGFloat</span> componentColors = <span class="built_in">CGColorGetComponents</span>(newColor.CGColor);</div><div class="line">    <span class="built_in">CGFloat</span> colorBrightness = ((componentColors[<span class="number">0</span>]  <span class="number">299</span>) + (componentColors[<span class="number">1</span>]  <span class="number">587</span>) + (componentColors[<span class="number">2</span>] * <span class="number">114</span>)) / <span class="number">1000</span>;</div><div class="line">    <span class="keyword">if</span> (colorBrightness &lt; <span class="number">0.5</span>)&#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Color is dark"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">YES</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span>&#123;</div><div class="line">        <span class="built_in">NSLog</span>(<span class="string">@"Color is light"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">NO</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>下一篇博文，我将对本篇做一点扩展，介绍<a href="http://travelchu.com/2014/08/19/iOS%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87UIImage%E9%A2%9C%E8%89%B2%E5%9D%87%E5%80%BCAverageColor/">获取图片颜色均值</a>的方法。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;获取颜色的深浅这个需求并不少见，比如根据背景色来动态更改Label的文字颜色以让用户获得更好的阅读体验。&lt;/p&gt;&lt;p&gt;下面介绍一个简单的判断方法，可能不是最好的，但可以满足大部分需求。&lt;/p&gt;&lt;p&gt;颜色深很好理解，颜色浅就稍复杂一点，简单归为两种情况：&lt;/p&gt;&lt;p&gt;1.透明
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS获取图片某一点像素颜色 Get Color of Pixel</title>
    <link href="http://travelchu.com/2014/08/18/iOS%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E6%9F%90%E4%B8%80%E7%82%B9%E5%83%8F%E7%B4%A0%E9%A2%9C%E8%89%B2%20Get%20Color%20of%20Pixel/"/>
    <id>http://travelchu.com/2014/08/18/iOS获取图片某一点像素颜色 Get Color of Pixel/</id>
    <published>2014-08-18T02:36:31.000Z</published>
    <updated>2016-01-07T04:52:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>本篇博文介绍一种取得图片某一像素点颜色值的方法，话不多说，直接上代码：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">UIColor</span>*) getPixelColorAtLocation:(<span class="built_in">CGPoint</span>)point inImage:(<span class="built_in">UIImage</span> *)image &#123;</div><div class="line">    <span class="built_in">UIColor</span>* color = <span class="literal">nil</span>;</div><div class="line">    <span class="built_in">CGImageRef</span> inImage = image.CGImage;</div><div class="line">    <span class="built_in">CGContextRef</span> cgctx = [<span class="keyword">self</span> createARGBBitmapContextFromImage:inImage];</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (cgctx == <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">nil</span>; <span class="comment">/* error */</span></div><div class="line">    &#125;</div><div class="line">    size_t w = <span class="built_in">CGImageGetWidth</span>(inImage);</div><div class="line">    size_t h = <span class="built_in">CGImageGetHeight</span>(inImage);</div><div class="line">    <span class="built_in">CGRect</span> rect = &#123;&#123;<span class="number">0</span>,<span class="number">0</span>&#125;,&#123;w,h&#125;&#125;;</div><div class="line"></div><div class="line">    <span class="built_in">CGContextDrawImage</span>(cgctx, rect, inImage);</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span>* data = <span class="built_in">CGBitmapContextGetData</span> (cgctx);</div><div class="line">    <span class="keyword">if</span> (data != <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="keyword">int</span> offset = <span class="number">4</span>*((w*round(point.y))+round(point.x));</div><div class="line">        <span class="keyword">int</span> alpha =  data[offset];</div><div class="line">        <span class="keyword">int</span> red = data[offset+<span class="number">1</span>];</div><div class="line">        <span class="keyword">int</span> green = data[offset+<span class="number">2</span>];</div><div class="line">        <span class="keyword">int</span> blue = data[offset+<span class="number">3</span>];</div><div class="line">        color = [<span class="built_in">UIColor</span> colorWithRed:(red/<span class="number">255.0</span>f) green:(green/<span class="number">255.0</span>f) blue:</div><div class="line">                 (blue/<span class="number">255.0</span>f) alpha:(alpha/<span class="number">255.0</span>f)];</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">CGContextRelease</span>(cgctx);</div><div class="line">    <span class="keyword">if</span> (data) &#123;</div><div class="line">        free(data);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> color;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">- (<span class="built_in">CGContextRef</span>) createARGBBitmapContextFromImage:(<span class="built_in">CGImageRef</span>) inImage &#123;</div><div class="line">    <span class="built_in">CGContextRef</span> context = <span class="literal">NULL</span>;</div><div class="line">    <span class="built_in">CGColorSpaceRef</span> colorSpace;</div><div class="line">    <span class="keyword">void</span> *bitmapData;</div><div class="line">    <span class="keyword">int</span> bitmapByteCount;</div><div class="line">    <span class="keyword">int</span> bitmapBytesPerRow;</div><div class="line">    size_t pixelsWide = <span class="built_in">CGImageGetWidth</span>(inImage);</div><div class="line">    size_t pixelsHigh = <span class="built_in">CGImageGetHeight</span>(inImage);</div><div class="line">    bitmapBytesPerRow = (pixelsWide * <span class="number">4</span>);</div><div class="line">    bitmapByteCount = (bitmapBytesPerRow * pixelsHigh);</div><div class="line">    colorSpace = <span class="built_in">CGColorSpaceCreateDeviceRGB</span>();</div><div class="line">    <span class="keyword">if</span> (colorSpace == <span class="literal">NULL</span>)&#123;</div><div class="line">        fprintf(stderr, <span class="string">"Error allocating color space\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line">    bitmapData = malloc( bitmapByteCount );</div><div class="line">    <span class="keyword">if</span> (bitmapData == <span class="literal">NULL</span>)&#123;</div><div class="line">        fprintf (stderr, <span class="string">"Memory not allocated!"</span>);</div><div class="line">        <span class="built_in">CGColorSpaceRelease</span>( colorSpace );</div><div class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line">    context = <span class="built_in">CGBitmapContextCreate</span> (bitmapData,pixelsWide,pixelsHigh,<span class="number">8</span>,bitmapBytesPerRow,colorSpace,kCGImageAlphaPremultipliedFirst);</div><div class="line">    <span class="keyword">if</span> (context == <span class="literal">NULL</span>)&#123;</div><div class="line">        free (bitmapData);</div><div class="line">        fprintf (stderr, <span class="string">"Context not created!"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">CGColorSpaceRelease</span>( colorSpace );</div><div class="line">    <span class="keyword">return</span> context;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博文介绍一种取得图片某一像素点颜色值的方法，话不多说，直接上代码：&lt;/p&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div cl
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>自动使用SVN的版本号作为你项目的编译版本号BuildNumber(带修正)</title>
    <link href="http://travelchu.com/2014/08/15/%E8%87%AA%E5%8A%A8%E4%BD%BF%E7%94%A8SVN%E7%9A%84%E7%89%88%E6%9C%AC%E5%8F%B7%E4%BD%9C%E4%B8%BA%E4%BD%A0%E9%A1%B9%E7%9B%AE%E7%9A%84%E7%BC%96%E8%AF%91%E7%89%88%E6%9C%AC%E5%8F%B7BuildNumber(%E5%B8%A6%E4%BF%AE%E6%AD%A3)/"/>
    <id>http://travelchu.com/2014/08/15/自动使用SVN的版本号作为你项目的编译版本号BuildNumber(带修正)/</id>
    <published>2014-08-15T07:30:02.000Z</published>
    <updated>2016-01-07T04:51:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>很多朋友在项目开发时会遇到项目的编译版本号设置问题，有的是不知道怎么设置，有的是经常忘了修改，下面介绍下<br>如何通过脚本自动使用SVN的版本号并惊醒修正来作为你项目的编译版本号，也就是build number。</p><p>首先我们看下脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">REV=svnversion -nc | /usr/bin/sed -e &apos;s/^[^:]*://;s/[A-Za-z]//&apos;</div><div class="line">BASEVERNUM=/usr/libexec/PlistBuddy -c &quot;Print :CFBundleShortVersionString&quot; &quot;$&#123;INFOPLIST_FILE&#125;&quot;</div><div class="line">echo $REV BASEREV=2707 FINALREV=$[$REV-$BASEREV] echo $FINALREV</div><div class="line">/usr/libexec/PlistBuddy -c “Set :CFBundleVersion $BASEVERNUM.$FINALREV””$&#123;INFOPLIST_FILE&#125;”</div></pre></td></tr></table></figure></p><p>其中，<br><strong>REV</strong> 是取得的svn版本号<br><strong>BASEVERNUM</strong> 是项目的版本号，注意不是编译版本号<br><strong>BASEREV</strong> 这里用来修正，假设你的svn库在你的项目进来前已经有了2707个版本了，你可能希望你的项目从0开始算。<br><strong>FINALREV</strong> 这是修正后的版本数</p><p>最后我们使用PlistBuddy工具讲编译版本号以$BASEVERNUM.$FINALREV”的格式写入info plist文件。<br>假设程序版本号1.0.1，计算出编译版本数（其实是svn提交次数）为105，那么最终的编译版本号，也就是build number 将是</p><p><span style="color:red">1.0.1.1.5</span></p><p>当然你也可以参照例子进行格式的自定义。</p><p>说完了脚本让我们看看怎样把这些应用的具体项目里：</p><p>1.如图所示，到Build Phases点击左上部的+，选择New Run Script Build Phase</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/NewRunScriptBuildPhase.png"><p>2.把新添加的Run Script拖动到Compile Sources上面：</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/RunScript.png"><p>3.你也可以给这个脚本起个名字，比如SetBuildNumber Script</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/SetBuildNumber.png"><p>4.把脚本代码粘贴进去，大功告成，编译一下，看看你的成果吧。</p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/scriptCode.png">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;很多朋友在项目开发时会遇到项目的编译版本号设置问题，有的是不知道怎么设置，有的是经常忘了修改，下面介绍下&lt;br&gt;如何通过脚本自动使用SVN的版本号并惊醒修正来作为你项目的编译版本号，也就是build number。&lt;/p&gt;&lt;p&gt;首先我们看下脚本：&lt;br&gt;&lt;figure cl
    
    </summary>
    
      <category term="AppStore(iOS)" scheme="http://travelchu.com/categories/AppStore-iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>如何移动应用了CGAffineTransform效果的UIView</title>
    <link href="http://travelchu.com/2014/08/13/%E5%A6%82%E4%BD%95%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E4%BA%86CGAffineTransform%E6%95%88%E6%9E%9C%E7%9A%84UIView/"/>
    <id>http://travelchu.com/2014/08/13/如何移动应用了CGAffineTransform效果的UIView/</id>
    <published>2014-08-13T06:47:20.000Z</published>
    <updated>2016-01-07T04:48:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%97%B6%E5%BA%94%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%95%88%E6%9E%9C%EF%BC%88%E4%B8%80%EF%BC%89">UIView 的旋转与缩放以及同时应用两种效果（一）</a>与 <a href="http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%97%B6%E5%BA%94%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%95%88%E6%9E%9C%EF%BC%88%E4%BA%8C%EF%BC%89">UIView 的旋转与缩放以及同时应用两种效果（二）</a>中我们探讨了如何对UIView应用旋转以及缩放效果，下面我们来探讨一下如何对应用了CGAffineTransform效果的UIView进行移动操作。（这里假设view是UIView的一个实例，中心点原始坐标为（50，50））</p><p>通常我们怎么改变一个view的位置呢？你肯定想得到，那就是设置一个新的中心点给view。代码是如此简单：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.center=<span class="built_in">CGPointMake</span>(<span class="number">100.0</span>, <span class="number">50.0</span>);</div></pre></td></tr></table></figure></p><p>可是等等，我的view刚刚应用了旋转和缩放效果，现在我只是移动了一点点的距离怎么看起来view在乱跑，完全不是我要的（100，50）；</p><p>如前面两篇博文所讲，在应用旋转与缩放效果时，已经对原始的坐标系有了影响。我们知道<span style="color:#703daa">CGAffineTransform</span>是一个矩阵变换，所以我们只要根据矩阵变换的知识，计算出我们需要的中心点不就行了？可是。。。数学早忘光了，该怎么办？</p><p>在Apple的文档中我注意到这样一个方法：<span style="color:#703daa">CGAffineTransform</span><span style="color:#000">CGAffineTransformTranslate(</span><span style="color:#703daa">CGAffineTransform</span><span style="color:#000">t,</span><span style="color:#000"></span><span style="color:#703daa">CGFloat</span><span style="color:#000">tx,</span><span style="color:#703daa">CGFloat</span><span style="color:#000">ty)</span></p><p>问题迎刃而解。假设在view的touch begin方法里去的了拖动的其实坐标，那么在touch move方法里你可用如下代码实现view的拖动操作（这里的self指的是view本身）：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">float</span> offsetX = currentPoint.x - _touchBeginPoint.x;</div><div class="line"><span class="keyword">float</span> offsetY = currentPoint.y - _touchBeginPoint.y;</div><div class="line"><span class="keyword">self</span>.transform = <span class="built_in">CGAffineTransformTranslate</span>(<span class="keyword">self</span>.transform, offsetX, offsetY);</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%9
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
      <category term="CGAffineTransform" scheme="http://travelchu.com/tags/CGAffineTransform/"/>
    
      <category term="UIView" scheme="http://travelchu.com/tags/UIView/"/>
    
  </entry>
  
  <entry>
    <title>UIView 的旋转与缩放以及同时应用两种效果（二）</title>
    <link href="http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%97%B6%E5%BA%94%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%95%88%E6%9E%9C%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://travelchu.com/2014/08/13/UIView 的旋转与缩放以及同时应用两种效果（二）/</id>
    <published>2014-08-13T06:05:31.000Z</published>
    <updated>2016-01-07T04:52:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<a href="http://www.travelchu.com/2014/08/13/uiview-%e7%9a%84%e6%97%8b%e8%bd%ac%e4%b8%8e%e7%bc%a9%e6%94%be%e4%bb%a5%e5%8f%8a%e5%90%8c%e6%97%b6%e5%ba%94%e7%94%a8%e4%b8%a4%e7%a7%8d%e6%95%88%e6%9e%9c%ef%bc%88%e4%b8%80%ef%bc%89/" title="UIView 的旋转与缩放以及同时应用两种效果（一）" target="_blank" rel="external">UIView 的旋转与缩放以及同时应用两种效果（一）</a>中，我们介绍了对UIView进行缩放与旋转的几种方法，这篇文章讲继续这些方法的具体应用的探讨。</p><h5 id="我们考虑这样一种需求：对UIView同时进行缩放和旋转（以0-5倍等比缩放和45度旋转为例）。"><a href="#我们考虑这样一种需求：对UIView同时进行缩放和旋转（以0-5倍等比缩放和45度旋转为例）。" class="headerlink" title="我们考虑这样一种需求：对UIView同时进行缩放和旋转（以0.5倍等比缩放和45度旋转为例）。"></a>我们考虑这样一种需求：对UIView同时进行缩放和旋转（以0.5倍等比缩放和45度旋转为例）。</h5><h5 id="在我自己的实践中，最开始的想法很简单，CGAffineTransformMakeScale-0-5-0-5-进行缩放，接着使用CGAffineTransformMakeRotation-M-PI-2-进行旋转，问题马上出来了，view并不会在缩放的同时进行旋转，而是只应用了最后的旋转效果。"><a href="#在我自己的实践中，最开始的想法很简单，CGAffineTransformMakeScale-0-5-0-5-进行缩放，接着使用CGAffineTransformMakeRotation-M-PI-2-进行旋转，问题马上出来了，view并不会在缩放的同时进行旋转，而是只应用了最后的旋转效果。" class="headerlink" title="在我自己的实践中，最开始的想法很简单，CGAffineTransformMakeScale(0.5, 0.5)进行缩放，接着使用CGAffineTransformMakeRotation (M_PI_2)进行旋转，问题马上出来了，view并不会在缩放的同时进行旋转，而是只应用了最后的旋转效果。"></a>在我自己的实践中，最开始的想法很简单，<span style="color:#703daa">CGAffineTransformMakeScale(0.5, 0.5)</span>进行缩放，接着使用<span style="color:#703daa">CGAffineTransformMakeRotation (M_PI_2)</span>进行旋转，问题马上出来了，view并不会在缩放的同时进行旋转，而是只应用了最后的旋转效果。</h5><h5 id="一番研究之后，找到了可行的解决方案，即："><a href="#一番研究之后，找到了可行的解决方案，即：" class="headerlink" title="一番研究之后，找到了可行的解决方案，即："></a>一番研究之后，找到了可行的解决方案，即：</h5><p>分别使用<span style="color:#703daa">CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)</span>和<span style="color:#703daa">CGAffineTransform CGAffineTransformScale(CGAffineTransform t,CGFloat sx, CGFloat sy)</span>替换上面的两个方法，具体代码如下：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">view.transform = <span class="built_in">CGAffineTransformScale</span>(view.transform, <span class="number">0.5</span>, <span class="number">0.5</span>);</div><div class="line">view.transform =  <span class="built_in">CGAffineTransformRotate</span> (view.transform, M_PI_2);</div></pre></td></tr></table></figure></p><h5 id="到此，我们在缩放的同时旋转的目的已经达到，但探索的脚步还要向前，新的问题是："><a href="#到此，我们在缩放的同时旋转的目的已经达到，但探索的脚步还要向前，新的问题是：" class="headerlink" title="到此，我们在缩放的同时旋转的目的已经达到，但探索的脚步还要向前，新的问题是："></a>到此，我们在缩放的同时旋转的目的已经达到，但探索的脚步还要向前，新的问题是：</h5><p><strong>如何移动应用了<span style="color:#703daa">CGAffineTransform</span>效果的view？</strong></p><p>让我们在<a href="http://travelchu.com/2014/08/13/%E5%A6%82%E4%BD%95%E7%A7%BB%E5%8A%A8%E5%BA%94%E7%94%A8%E4%BA%86CGAffineTransform%E6%95%88%E6%9E%9C%E7%9A%84UIView/">如何移动应用了CGAffineTransform效果的UIView</a>里继续探讨</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;a href=&quot;http://www.travelchu.com/2014/08/13/uiview-%e7%9a%84%e6%97%8b%e8%bd%ac%e4%b8%8e%e7%bc%a9%e6%94%be%e4%bb%a5%e5%8f%8a%e5%90%8c%e6
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
      <category term="CGAffineTransform" scheme="http://travelchu.com/tags/CGAffineTransform/"/>
    
      <category term="UIView" scheme="http://travelchu.com/tags/UIView/"/>
    
  </entry>
  
  <entry>
    <title>UIView 的旋转与缩放以及同时应用两种效果（一）</title>
    <link href="http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%97%B6%E5%BA%94%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%95%88%E6%9E%9C%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://travelchu.com/2014/08/13/UIView 的旋转与缩放以及同时应用两种效果（一）/</id>
    <published>2014-08-13T05:23:40.000Z</published>
    <updated>2016-01-07T04:53:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>对于UIView的缩放，最简单的方法可以是修改view的frame，这里不做讨论。</p><p>我们来讨论一下 <span style="color:#703daa">CGAffineTransform</span>在UIView的缩放与旋转上的应用。以下假设view为UIView的一个实例。<br><strong>1. UIView的缩放</strong><br><span style="color:#703daa">CGAffineTransform</span>提供了两个方法用于缩放，分别是<span style="color:#703daa">CGAffineTransform CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)</span>和<span style="color:#703daa">CGAffineTransform CGAffineTransformScale(CGAffineTransform t,CGFloat sx, CGFloat sy)</span>。</p><p>1.1 <span style="color:#703daa">CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)</span><br>这个方法可以方便的对view的长和宽进行缩放，不改变view的中心点。注意！中心点不变指的是物理位置不变，不是坐标，因为坐标系此时已经发生改变。<br>例如：对view进行0.5等比缩放：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.transform = <span class="built_in">CGAffineTransformMakeScale</span>(<span class="number">0.5</span>, <span class="number">0.5</span>);</div></pre></td></tr></table></figure></p><p>1.2 <span style="color:#703daa">CGAffineTransformScale(CGAffineTransform t,CGFloat sx, CGFloat sy)</span><br>这个方法同样是view的长和宽进行缩放，效果类似<span style="color:#703daa">CGAffineTransformMakeScale(CGFloat sx, CGFloat sy)</span>不同的是这个方法可以叠加其他<span style="color:#703daa">CGAffineTransform</span>效果（比如旋转）<br>例如：对view进行0.5等比缩放：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.transform = <span class="built_in">CGAffineTransformScale</span>(view.transform, <span class="number">0.5</span>, <span class="number">0.5</span>);</div></pre></td></tr></table></figure></p><p><strong>2. UIView的旋转</strong><br><span style="color:#703daa">CGAffineTransform</span>提供了两个方法用于旋转，分别是<span style="color:#703daa">CGAffineTransform CGAffineTransformMakeRotation(CGFloat angle)</span>和<span style="color:#703daa">CGAffineTransform CGAffineTransformRotate(CGAffineTransform t, CGFloat angle)</span>。</p><p>2.1 <span style="color:#703daa">CGAffineTransformMakeRotation(CGFloat angle)</span><br>这个方法可以方便的对view进行旋转，不改变view的中心点。注意！中心点不变指的是物理位置不变，不是坐标，因为坐标系此时已经发生改变。<br>例如：对view进行45度旋转：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.transform = <span class="built_in">CGAffineTransformMakeRotation</span> (M_PI_4);</div></pre></td></tr></table></figure></p><p>2.2 <span style="color:#703daa">CGAffineTransformRotate(CGAffineTransform t, CGFloat angle)</span><br>这个方法同样是对view进行旋转，效果类似<span style="color:#703daa">CGAffineTransformMakeRotation(CGFloat angle)</span>不同的是这个方法可以叠加其他<span style="color:#703daa">CGAffineTransform</span>效果（比如缩放）<br>例如：对view进行45度旋转：<br><figure class="highlight objc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">view.transform =  <span class="built_in">CGAffineTransformRotate</span> (view.transform, M_PI_2);</div></pre></td></tr></table></figure></p><p>相关链接： <a href="http://travelchu.com/2014/08/13/UIView%20%E7%9A%84%E6%97%8B%E8%BD%AC%E4%B8%8E%E7%BC%A9%E6%94%BE%E4%BB%A5%E5%8F%8A%E5%90%8C%E6%97%B6%E5%BA%94%E7%94%A8%E4%B8%A4%E7%A7%8D%E6%95%88%E6%9E%9C%EF%BC%88%E4%BA%8C%EF%BC%89/">UIView 的旋转与缩放以及同时应用两种效果（二）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对于UIView的缩放，最简单的方法可以是修改view的frame，这里不做讨论。&lt;/p&gt;&lt;p&gt;我们来讨论一下 &lt;span style=&quot;color:#703daa&quot;&gt;CGAffineTransform&lt;/span&gt;在UIView的缩放与旋转上的应用。以下假设view为UI
    
    </summary>
    
      <category term="iOS" scheme="http://travelchu.com/categories/iOS/"/>
    
    
      <category term="iOS" scheme="http://travelchu.com/tags/iOS/"/>
    
      <category term="CGAffineTransform" scheme="http://travelchu.com/tags/CGAffineTransform/"/>
    
      <category term="UIView" scheme="http://travelchu.com/tags/UIView/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s 2048</title>
    <link href="http://travelchu.com/2014/08/07/lets-2048/"/>
    <id>http://travelchu.com/2014/08/07/lets-2048/</id>
    <published>2014-08-07T07:45:43.000Z</published>
    <updated>2016-01-07T04:52:40.000Z</updated>
    
    <content type="html"><![CDATA[<p><span style="font-weight:700;color:#000">一款流行的2048游戏，来挑战斐波那契神奇数字吧</span></p><p>下载：<a href="https://itunes.apple.com/us/app/lets2048/id881801272?ls=1&amp;mt=8" target="_blank" rel="external">View in App Store</a></p><img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/2018.png"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/mzl.eueymziy-169x300.png"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/mzl.eueymziy.png"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/mzl.dtqzhdba-169x300.png"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/mzl.dtqzhdba.png"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/screen320x320-168x300.jpeg"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/screen320x320.jpeg"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/screen320x320-2-168x300.jpeg"> <img src="http://7xpujh.com1.z0.glb.clouddn.com/static/images/screen320x320-2.jpeg">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;span style=&quot;font-weight:700;color:#000&quot;&gt;一款流行的2048游戏，来挑战斐波那契神奇数字吧&lt;/span&gt;&lt;/p&gt;&lt;p&gt;下载：&lt;a href=&quot;https://itunes.apple.com/us/app/lets2048/id881
    
    </summary>
    
      <category term="AppStore(iOS)" scheme="http://travelchu.com/categories/AppStore-iOS/"/>
    
    
  </entry>
  
</feed>
